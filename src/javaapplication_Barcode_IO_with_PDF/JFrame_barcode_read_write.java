/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication_Barcode_IO_with_PDF;

import java.io.*;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
//import java.text.SimpleDateFormat;

/**
 *
 * @author user
 */
public class JFrame_barcode_read_write extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_barcode_read_write
     */
    Text_File_IO Text_File_IO_Object = new Text_File_IO();
    Barcode_read_write Barcode_Read_Object = new Barcode_read_write();
    
     
    public JFrame_barcode_read_write() {
        
        initComponents();
        Init_Form_Configuration();
        Init_Value();
    }
    
    private void Init_Form_Configuration(){
        Text_File_IO_Object.Read_Config_from_Text_File();
        this.jTextField_Current_Path.setText(Text_File_IO_Object.Current_Path_of_Image);
        this.jTextField_Vertical_Precision_Step.setText(Text_File_IO_Object.Vertical_Precision_Step);
        this.jTextField_Horizontal_Precision_Step.setText(Text_File_IO_Object.Horizontal_Precision_Step);
        this.TextField_Column_Count_in_Image.setText(Text_File_IO_Object.Column_Count_of_Image);
        this.TextField_Row_Count_in_Image.setText(Text_File_IO_Object.Row_Count_of_Image);
        this.jTextField_Horizontal_Gap.setText(Text_File_IO_Object.Horizontal_Gap);
        this.jTextField_Vertical_Gap.setText(Text_File_IO_Object.Vertical_Gap);
        this.jTextField_Margin_Quality.setText(Text_File_IO_Object.Margin_Quality);
        this.jTextField_Sub_Image_Surplus_Horizontal.setText(Text_File_IO_Object.Sub_Image_Surplus_Horizontal);
        this.jTextField_Sub_Image_Surplus_Vertical.setText(Text_File_IO_Object.Sub_Image_Surplus_Vertical);
        this.jTextField_QR_size.setText(Text_File_IO_Object.QR_Size);
        this.jTextField_font_size.setText(Text_File_IO_Object.Font_Size);
    }
    
    private void Init_Value(){
        String Height_Depth_String = this.jTextField_Vertical_Precision_Step.getText();
        String Width_Depth_String = this.jTextField_Horizontal_Precision_Step.getText();
        String Horizontal_Gap_String = this.jTextField_Horizontal_Gap.getText();
        String Vertical_Gap_String = this.jTextField_Vertical_Gap.getText();
        String Sub_Image_Surplus_Horizontal_String =  this.jTextField_Sub_Image_Surplus_Horizontal.getText();
        String Sub_Image_Surplus_Vertical_String   = this.jTextField_Sub_Image_Surplus_Vertical.getText();
        String Margin_Quality = this.jTextField_Margin_Quality.getText();
                
        Barcode_Read_Object.Height_Depth= Integer.parseInt(Height_Depth_String);
        Barcode_Read_Object.Width_Depth = Integer.parseInt(Width_Depth_String);
        Barcode_Read_Object.Horizontal_Gap = Float.parseFloat(Horizontal_Gap_String);
        Barcode_Read_Object.Vertical_Gap = Float.parseFloat(Vertical_Gap_String);  
        Barcode_Read_Object.Sub_Image_Surplus_Horizontal = Float.parseFloat(Sub_Image_Surplus_Horizontal_String);
        Barcode_Read_Object.Sub_Image_Surplus_Vertical = Float.parseFloat(Sub_Image_Surplus_Vertical_String);
        Barcode_Read_Object.Margin_Quality = Integer.parseInt(Margin_Quality);
    }
    
     public void Get_Config_From_TextField(){
           
        Text_File_IO_Object.Current_Path_of_Image = this.jTextField_Current_Path.getText();
        Text_File_IO_Object.Vertical_Precision_Step = this.jTextField_Vertical_Precision_Step.getText();
        Text_File_IO_Object.Horizontal_Precision_Step = this.jTextField_Horizontal_Precision_Step.getText();
        Text_File_IO_Object.Column_Count_of_Image = this.TextField_Column_Count_in_Image.getText();
        Text_File_IO_Object.Row_Count_of_Image = this.TextField_Row_Count_in_Image.getText();
        Text_File_IO_Object.Horizontal_Gap = this.jTextField_Horizontal_Gap.getText();
        Text_File_IO_Object.Vertical_Gap = this.jTextField_Vertical_Gap.getText();
        Text_File_IO_Object.Margin_Quality = this.jTextField_Margin_Quality.getText();
        Text_File_IO_Object.Sub_Image_Surplus_Horizontal = this.jTextField_Sub_Image_Surplus_Horizontal.getText();
        Text_File_IO_Object.Sub_Image_Surplus_Vertical = this.jTextField_Sub_Image_Surplus_Vertical.getText();
        Text_File_IO_Object.QR_Size=this.jTextField_QR_size.getText();
        Text_File_IO_Object.Font_Size=this.jTextField_font_size.getText();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Original_Image_File_Names_Text_Area = new javax.swing.JTextArea();
        jTextField_Current_Path = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Converted_Image_File_Names_Text_Area = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Vertical_Precision_Step = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_Horizontal_Precision_Step = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TextField_Column_Count_in_Image = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TextField_Row_Count_in_Image = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_Horizontal_Gap = new javax.swing.JTextField();
        jTextField_Vertical_Gap = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_Margin_Quality = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField_Sub_Image_Surplus_Horizontal = new javax.swing.JTextField();
        jTextField_Sub_Image_Surplus_Vertical = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField_QR_size = new javax.swing.JTextField();
        jTextField_font_size = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem_Save_Config = new javax.swing.JMenuItem();
        jMenuItem_Exit_Program = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_Extract_Barcode_39_from_Single_data_Image_Files = new javax.swing.JMenuItem();
        jMenuItem_Copy_Images_with_Extratced_Barcode39 = new javax.swing.JMenuItem();
        jMenuItem_QR_decode = new javax.swing.JMenuItem();
        jMenuItem_Extract_Barcode39_from_Complex_Barcode_Images = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_qr = new javax.swing.JMenuItem();
        jMenuItem_print_barcode = new javax.swing.JMenuItem();
        Information = new javax.swing.JMenu();
        About_This = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Barcode Reader for Picture");

        Original_Image_File_Names_Text_Area.setColumns(20);
        Original_Image_File_Names_Text_Area.setRows(5);
        jScrollPane1.setViewportView(Original_Image_File_Names_Text_Area);

        jTextField_Current_Path.setText("C:\\");

            Converted_Image_File_Names_Text_Area.setColumns(20);
            Converted_Image_File_Names_Text_Area.setRows(5);
            jScrollPane2.setViewportView(Converted_Image_File_Names_Text_Area);

            jLabel1.setText("Original Image File Names");

            jLabel2.setText("Read at");

            jLabel3.setText("Converted Image File Names");

            jLabel4.setText("Precision Step :");

            jTextField_Vertical_Precision_Step.setText("20");

            jLabel6.setText("Height  :");

            jLabel7.setText("Width : ");

            jTextField_Horizontal_Precision_Step.setText("3");

            jLabel8.setText("Row :");

            TextField_Column_Count_in_Image.setText("3");

            jLabel9.setText("Column :");

            TextField_Row_Count_in_Image.setText("2");
            TextField_Row_Count_in_Image.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    TextField_Row_Count_in_ImageActionPerformed(evt);
                }
            });

            jLabel5.setText("Vertical Gap : ");

            jLabel10.setText("Horizontal Gap :");

            jTextField_Horizontal_Gap.setText("0");

            jTextField_Vertical_Gap.setText("0.1");

            jLabel11.setText("Margin Quality :");

            jTextField_Margin_Quality.setText("4");

            jLabel12.setText("Sub Image Surplus Ver :");

            jLabel13.setText("Sub Image Surplus Hor :");

            jTextField_Sub_Image_Surplus_Horizontal.setText("0.05");

            jTextField_Sub_Image_Surplus_Vertical.setText("0.05");

            jLabel14.setText("QR size :");

            jLabel15.setText("Font size :");

            jTextField_QR_size.setText("80");

            jTextField_font_size.setText("15");

            jMenu3.setText("Main");

            jMenuItem_Save_Config.setText("Save Configuration");
            jMenuItem_Save_Config.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_Save_ConfigActionPerformed(evt);
                }
            });
            jMenu3.add(jMenuItem_Save_Config);

            jMenuItem_Exit_Program.setText("Exit");
            jMenuItem_Exit_Program.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_Exit_ProgramActionPerformed(evt);
                }
            });
            jMenu3.add(jMenuItem_Exit_Program);

            jMenuBar1.add(jMenu3);

            jMenu1.setText("Barcode");
            jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jMenu1MouseClicked(evt);
                }
            });
            jMenu1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenu1ActionPerformed(evt);
                }
            });

            jMenuItem_Extract_Barcode_39_from_Single_data_Image_Files.setText("Extract Barcode 39 from Images");
            jMenuItem_Extract_Barcode_39_from_Single_data_Image_Files.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_Extract_Barcode_39_from_Single_data_Image_FilesActionPerformed(evt);
                }
            });
            jMenu1.add(jMenuItem_Extract_Barcode_39_from_Single_data_Image_Files);

            jMenuItem_Copy_Images_with_Extratced_Barcode39.setText("Copy Images to Sub Folder with Barcode");
            jMenuItem_Copy_Images_with_Extratced_Barcode39.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_Copy_Images_with_Extratced_Barcode39ActionPerformed(evt);
                }
            });
            jMenu1.add(jMenuItem_Copy_Images_with_Extratced_Barcode39);

            jMenuItem_QR_decode.setText("Extract Data from images with QR");
            jMenuItem_QR_decode.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_QR_decodeActionPerformed(evt);
                }
            });
            jMenu1.add(jMenuItem_QR_decode);

            jMenuItem_Extract_Barcode39_from_Complex_Barcode_Images.setText("Extract Data from Images with Complex Barcodes");
            jMenuItem_Extract_Barcode39_from_Complex_Barcode_Images.setEnabled(false);
            jMenuItem_Extract_Barcode39_from_Complex_Barcode_Images.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_Extract_Barcode39_from_Complex_Barcode_ImagesActionPerformed(evt);
                }
            });
            jMenu1.add(jMenuItem_Extract_Barcode39_from_Complex_Barcode_Images);

            jMenuBar1.add(jMenu1);

            jMenu2.setText("Output");

            jMenuItem_qr.setText("Save Barcode as PDF");
            jMenuItem_qr.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_qrActionPerformed(evt);
                }
            });
            jMenu2.add(jMenuItem_qr);

            jMenuItem_print_barcode.setText("Print Barcode");
            jMenuItem_print_barcode.setEnabled(false);
            jMenuItem_print_barcode.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem_print_barcodeActionPerformed(evt);
                }
            });
            jMenu2.add(jMenuItem_print_barcode);

            jMenuBar1.add(jMenu2);

            Information.setText("Information");

            About_This.setText("License Notice");
            About_This.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    About_ThisActionPerformed(evt);
                }
            });
            Information.add(About_This);

            jMenuBar1.add(Information);

            setJMenuBar(jMenuBar1);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2)
                                    .addGap(48, 48, 48))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(35, Short.MAX_VALUE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(112, 112, 112)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField_Current_Path, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(64, 64, 64)
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField_Vertical_Precision_Step, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26)
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField_Horizontal_Precision_Step, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_Margin_Quality))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel9))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(TextField_Column_Count_in_Image, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                                    .addComponent(jTextField_Horizontal_Gap))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField_Sub_Image_Surplus_Horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel15))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(25, 25, 25)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(TextField_Row_Count_in_Image, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                                        .addComponent(jTextField_Vertical_Gap)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(29, 29, 29)
                                                    .addComponent(jTextField_font_size, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(74, 74, 74)
                                            .addComponent(jLabel12)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextField_Sub_Image_Surplus_Vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addContainerGap(52, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addGap(56, 56, 56)
                            .addComponent(jTextField_QR_size, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_Current_Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField_Vertical_Precision_Step, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_Horizontal_Precision_Step, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(17, 17, 17)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextField_Column_Count_in_Image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)
                        .addComponent(TextField_Row_Count_in_Image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel10)
                        .addComponent(jTextField_Horizontal_Gap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_Vertical_Gap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(25, 25, 25)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jTextField_Margin_Quality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel13)
                        .addComponent(jTextField_Sub_Image_Surplus_Horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_Sub_Image_Surplus_Vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel15)
                        .addComponent(jTextField_QR_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_font_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(15, 15, 15))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_Exit_ProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Exit_ProgramActionPerformed
    this.dispose();
// TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem_Exit_ProgramActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
                
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
   //  FileFilter Image_Filter = new FileNameExtensionFilter ("JPG & GIF Images", "jpg", "gif");    
   //  jFileChooser1.addChoosableFileFilter(Image_Filter);
   //  jFileChooser1.setMultiSelectionEnabled(true);
   //  jFileChooser1.showOpenDialog(jMenuItem1)  ;  
   //  jFileChooser1.showDialog(jMenu1, "OK");
    
// TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed
   private void Read_Complex_Barcode_Image_Files(){
    
    boolean Barcode_Result= false;
 
    String Row_Count_String = this.TextField_Row_Count_in_Image.getText();
    String Column_Count_String = this.TextField_Column_Count_in_Image.getText();
    int Row_Count = Integer.parseInt(Row_Count_String);
    int Column_Count = Integer.parseInt(Column_Count_String);
    
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg", "gif");
    chooser.setMultiSelectionEnabled(true);
    File Null_Folder = new File(this.jTextField_Current_Path.getText());
        
    chooser.setCurrentDirectory( Null_Folder );
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if(returnVal == JFileChooser.APPROVE_OPTION) {
    File[] Selected_Files = chooser.getSelectedFiles();
    Barcode_Read_Object.Create_Today_Sub_Folder(Selected_Files[0]);
 
    
    for(File Each_File: Selected_Files){
        
        try {
            Barcode_Result=Barcode_Read_Object.Decode_Single_Image_with_Complex_Barcode(Each_File);
            if( Barcode_Result == true ){
                 Barcode_Read_Object.Save_Splited_Images( Each_File,  Row_Count,  Column_Count);
            }
        } catch (IOException ex) {
            Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    new End_Message_Box().setVisible(true);
    }
    }
    
    private void Read_Complex_Barcode_Image_Files_with_QR_Code(){
    
    boolean Barcode_Result= false;
    String selected_file_list="";
    String Row_Count_String = this.TextField_Row_Count_in_Image.getText();
    String Column_Count_String = this.TextField_Column_Count_in_Image.getText();
    int Row_Count = Integer.parseInt(Row_Count_String);
    int Column_Count = Integer.parseInt(Column_Count_String);
    
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg", "gif");
    chooser.setMultiSelectionEnabled(true);
    File Null_Folder = new File(this.jTextField_Current_Path.getText());
        
    chooser.setCurrentDirectory( Null_Folder );
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if(returnVal == JFileChooser.APPROVE_OPTION) {
    File[] Selected_Files = chooser.getSelectedFiles();
    Barcode_Read_Object.Create_Today_Sub_Folder(Selected_Files[0]);
 
    
    for(File Each_File: Selected_Files){
        selected_file_list=selected_file_list+Each_File+"\n";
        try {
            Barcode_Result=Barcode_Read_Object.Decode_Single_Image_with_Complex_Barcode(Each_File);
            if( Barcode_Result == true ){
                 Barcode_Read_Object.Save_Splited_Images_with_QR_infor( Each_File,  Row_Count,  Column_Count);
            }
        } catch (IOException ex) {
            Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        this.Original_Image_File_Names_Text_Area.setText(selected_file_list);
        this.Converted_Image_File_Names_Text_Area.setText(Barcode_Read_Object.decoded_evi_num_list);  
    
    }
   new End_Message_Box().setVisible(true);
    }
    
    private void Read_Single_Barcode39_and_Save_to_Sub_Folder(){
    String Each_File_Path= null;
    String Each_File_Name= null;
    String Selected_FIle_Names = "";
    String Converted_FIle_Names = "";
    String Selected_Parent_Path="";
    String Barcode_Result=null;
 
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg", "gif");
    chooser.setMultiSelectionEnabled(true);
    File Null_Folder = new File(this.jTextField_Current_Path.getText());
        
    chooser.setCurrentDirectory( Null_Folder );
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if(returnVal == JFileChooser.APPROVE_OPTION) {
    File[] Selected_Files = chooser.getSelectedFiles();
    Barcode_Read_Object.Create_Today_Sub_Folder(Selected_Files[0]);
    
    for(File Each_File: Selected_Files){
        Each_File_Path = Each_File.getPath();
        Each_File_Name = Each_File.getName();
        try {
            Barcode_Result=Barcode_Read_Object.Get_Barcode_text(Each_File_Path);
            //System.out.println(Barcode_Result);
            if (Barcode_Result.equals("") ){
            Converted_FIle_Names = Converted_FIle_Names   + "\n";
            }
            else{
                
            File Destination_File = new File(Barcode_Read_Object.Sub_Folder_String_to_Save+"/"+ Barcode_Result+"-"+ Each_File_Name);
            Selected_Parent_Path = Barcode_Read_Object.Sub_Folder_String_to_Save;
            Files.copy(Each_File.toPath(), Destination_File.toPath());
            Converted_FIle_Names = Converted_FIle_Names  + Barcode_Result + "-"+ Each_File_Name + "\n";
            }
            Selected_FIle_Names =  Selected_FIle_Names + Each_File_Name +"\n";
            
        } catch (IOException ex) {
            Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     this.Original_Image_File_Names_Text_Area.setText(Selected_FIle_Names);
     this.Converted_Image_File_Names_Text_Area.setText(Converted_FIle_Names);
     if (Selected_Parent_Path.equals("")!=false){
            this.jTextField_Current_Path.setText(Selected_Parent_Path);
     }
    new End_Message_Box().setVisible(true);
    }
    }
    
    private void Read_Single_Barcode_Image_Files(){
    String Each_File_Path= null;
    String Each_File_Name= null;
    String Each_File_Parent=null;
    String Selected_FIle_Names = "";
    String Converted_FIle_Names = "";
    String Selected_Parent_Path="";
    String Barcode_Result=null;
    
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg", "gif");
    chooser.setMultiSelectionEnabled(true);
    File Null_Folder = new File(this.jTextField_Current_Path.getText());
        
    chooser.setCurrentDirectory( Null_Folder );
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if(returnVal == JFileChooser.APPROVE_OPTION) {
    File[] Selected_Files = chooser.getSelectedFiles();
    for(File Each_File: Selected_Files){
        Each_File_Path = Each_File.getPath();
        Each_File_Parent= Each_File.getParent();
        Each_File_Name = Each_File.getName();
        try {
            Barcode_Result=Barcode_Read_Object.Get_Barcode_text(Each_File_Path);
            //System.out.println(Barcode_Result);
            if (Barcode_Result.equals("") ){
            Converted_FIle_Names = Converted_FIle_Names   + "\n";
            }
            else{
            Each_File.renameTo( new File(Each_File_Parent+"/"+ Barcode_Result+"-"+Each_File_Name));
            Converted_FIle_Names = Converted_FIle_Names  + Barcode_Result + "-"+ Each_File_Name + "\n";
            Selected_Parent_Path = Each_File_Parent;
            }
            Selected_FIle_Names =  Selected_FIle_Names + Each_File_Name +"\n";
            
        } catch (IOException ex) {
            Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     this.Original_Image_File_Names_Text_Area.setText(Selected_FIle_Names);
     this.Converted_Image_File_Names_Text_Area.setText(Converted_FIle_Names);
     if (Selected_Parent_Path.equals("")!=false){
            this.jTextField_Current_Path.setText(Selected_Parent_Path);
     }
    new End_Message_Box().setVisible(true);
    }
  
        // TODO add your handling code here:
    }                                        
    
    private void jMenuItem_Extract_Barcode_39_from_Single_data_Image_FilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Extract_Barcode_39_from_Single_data_Image_FilesActionPerformed
    Read_Single_Barcode_Image_Files();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_Extract_Barcode_39_from_Single_data_Image_FilesActionPerformed

    private void TextField_Row_Count_in_ImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_Row_Count_in_ImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_Row_Count_in_ImageActionPerformed

    private void jMenuItem_Save_ConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Save_ConfigActionPerformed
    Get_Config_From_TextField();
    Text_File_IO_Object.Write_Config_to_Text_FIle();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_Save_ConfigActionPerformed

    private void jMenuItem_Extract_Barcode39_from_Complex_Barcode_ImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Extract_Barcode39_from_Complex_Barcode_ImagesActionPerformed
        Init_Value();
        Read_Complex_Barcode_Image_Files();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_Extract_Barcode39_from_Complex_Barcode_ImagesActionPerformed

    private void jMenuItem_Copy_Images_with_Extratced_Barcode39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Copy_Images_with_Extratced_Barcode39ActionPerformed
        Read_Single_Barcode39_and_Save_to_Sub_Folder();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_Copy_Images_with_Extratced_Barcode39ActionPerformed

    private void About_ThisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_About_ThisActionPerformed
        About_This About_This_Form = new About_This();
        About_This_Form.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_About_ThisActionPerformed

    
    private void choose_to_open_save() throws IOException{
        PDF_IO pdf_io_obg = new PDF_IO();
   
        pdf_io_obg.qr_size = Integer.parseInt(Text_File_IO_Object.QR_Size);
        pdf_io_obg.font_size= Integer.parseInt(Text_File_IO_Object.Font_Size);
        pdf_io_obg.text_ver_size = (int) pdf_io_obg.font_size * 3 / 2 ;

        pdf_io_obg.Column_Count_of_Image=Integer.parseInt(Text_File_IO_Object.Column_Count_of_Image);
        pdf_io_obg.Row_Count_of_Image= Integer.parseInt(Text_File_IO_Object.Row_Count_of_Image);
        pdf_io_obg.hor_distance = (int) pdf_io_obg.a4_landscap_width/pdf_io_obg.Column_Count_of_Image;
        pdf_io_obg.ver_distance = (int) (pdf_io_obg.a4_landscap_height-pdf_io_obg.margin*pdf_io_obg.Row_Count_of_Image-pdf_io_obg.code_39_height*pdf_io_obg.Row_Count_of_Image)/pdf_io_obg.Row_Count_of_Image;
    
        JFileChooser open_chooser = new JFileChooser();
        FileNameExtensionFilter text_filter = new FileNameExtensionFilter("text files", "txt");
        open_chooser.setMultiSelectionEnabled(true);
        File Null_Folder = new File(this.jTextField_Current_Path.getText());
        open_chooser.setCurrentDirectory( Null_Folder );
        open_chooser.setFileFilter(text_filter);
        int open_returnVal = open_chooser.showOpenDialog(this);
        if(open_returnVal == JFileChooser.APPROVE_OPTION){   
            File[] Selected_Files = open_chooser.getSelectedFiles();
            for (File each_file : Selected_Files){
                 pdf_io_obg.get_infor_from_each_text_file(each_file);
            }
             pdf_io_obg.add_qr_to_PDF(choose_to_save()); 
        }
       
    }
    
    private String choose_to_save () throws IOException {
    String selected_file_name=null;
        JFileChooser save_chooser = new JFileChooser();
        FileNameExtensionFilter pdf_filter = new FileNameExtensionFilter("pdf files", "pdf");
        save_chooser.setMultiSelectionEnabled(false);
        File Null_Folder = new File(this.jTextField_Current_Path.getText());
        save_chooser.setCurrentDirectory( Null_Folder );
        save_chooser.setSelectedFile(new File("new_barcode.pdf"));
        save_chooser.setFileFilter(pdf_filter);
        int save_returnVal = save_chooser.showOpenDialog(this);
        if(save_returnVal == JFileChooser.APPROVE_OPTION){
            File seleted_save_file = save_chooser.getSelectedFile();
            selected_file_name   = seleted_save_file.getPath();
            }
        new End_Message_Box().setVisible(true);
      return selected_file_name;
    }
    
    
    private void jMenuItem_qrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_qrActionPerformed
       Init_Value();
       Get_Config_From_TextField();

       try{
            choose_to_open_save();
       } catch(IOException e){
           e.printStackTrace();
       }
       
    }//GEN-LAST:event_jMenuItem_qrActionPerformed

    private void jMenuItem_QR_decodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_QR_decodeActionPerformed
        Init_Value();
        Read_Complex_Barcode_Image_Files_with_QR_Code();

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_QR_decodeActionPerformed

    private void jMenuItem_print_barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_print_barcodeActionPerformed
        //choose_to_open();
      //  pdf_io_obg.print_barcode_to_printer();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_print_barcodeActionPerformed
      
  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_barcode_read_write.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_barcode_read_write().setVisible(true);
            }
        });
    }
      // TODO add your handling code here:

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About_This;
    private javax.swing.JTextArea Converted_Image_File_Names_Text_Area;
    private javax.swing.JMenu Information;
    private javax.swing.JTextArea Original_Image_File_Names_Text_Area;
    private javax.swing.JTextField TextField_Column_Count_in_Image;
    private javax.swing.JTextField TextField_Row_Count_in_Image;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_Copy_Images_with_Extratced_Barcode39;
    private javax.swing.JMenuItem jMenuItem_Exit_Program;
    private javax.swing.JMenuItem jMenuItem_Extract_Barcode39_from_Complex_Barcode_Images;
    private javax.swing.JMenuItem jMenuItem_Extract_Barcode_39_from_Single_data_Image_Files;
    private javax.swing.JMenuItem jMenuItem_QR_decode;
    private javax.swing.JMenuItem jMenuItem_Save_Config;
    private javax.swing.JMenuItem jMenuItem_print_barcode;
    private javax.swing.JMenuItem jMenuItem_qr;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField_Current_Path;
    private javax.swing.JTextField jTextField_Horizontal_Gap;
    private javax.swing.JTextField jTextField_Horizontal_Precision_Step;
    private javax.swing.JTextField jTextField_Margin_Quality;
    private javax.swing.JTextField jTextField_QR_size;
    private javax.swing.JTextField jTextField_Sub_Image_Surplus_Horizontal;
    private javax.swing.JTextField jTextField_Sub_Image_Surplus_Vertical;
    private javax.swing.JTextField jTextField_Vertical_Gap;
    private javax.swing.JTextField jTextField_Vertical_Precision_Step;
    private javax.swing.JTextField jTextField_font_size;
    // End of variables declaration//GEN-END:variables

  
}